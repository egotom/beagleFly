1、关于本项目
   起源，之前给家里小朋友买过一个四轴航模玩具，样子高端大气上档次，但是飞起来很国产，小朋友完全不感兴趣，让我很没面子。这回买一堆零件，过年回家自己制作。然而回老家才发现买到的两只电子调速器一只是坏的。剪开一看，本该高度一致的场效应管型号各色各样，一看就是电子垃圾上拆来的啊。那会快递都要放假了。最终，这个项目还没有飞起来。1.2kg起飞重量，无论5030的三叶浆还是1045的二叶浆，单螺旋桨都没法起飞。
   这个项目的目标是实现一个远距离自动驾驶的无人机，达到50km以上的飞行距离。为了这个目标，机翼尽可能小，采用较低转速的电机，都是为了提高飞行距离。 能传输5km的航模遥控器已经非常昂贵,足以购买一台国产Android手机。所以本项目采用一部Android手机作为飞行传感器。为无人机提供GPS导航，指南针，俯仰角度，旋转角度，海拔高度(激光测距模块昂贵笨重，这里还不适用)等传感器数据。采用一块树莓派3B作为控制器。树莓派自带的WiFi无线模块可以用于无人机起降遥控和接收传感器数据，GPIO用于控制电子调速器和舵机，同时它的处理器和内存配置足以运行自动导航和巡航任务。
   
   还有更好的解决方案：采用一个带USB通讯功能的多路PWM模块代替树莓派。把遥控与自动巡航代码都移到Android手机的App项目中。手机通过Micro-USB 向PWM模块发送控制指令。这样做的好处是：成本更低，毕竟国内购买树莓派并不便宜；遥控距离大幅增加，不依靠WiFi，只要手机有信号的地方都能遥控到无人机；控制器更强大，但耗电更少，因为PWM模块功率远小于树莓派。缺点是：我实在不想写Java代码，Kotlin又还图样图森博。
   
   如果你需要的是一个在视线范围内飞20多分钟的航模，可以购买成品模块或整机。便宜又美观。

2、目录结构
   Auto navigation        导航代码，方向角导航，最大弧线导航...,各种牛逼的导航算法。
   doc                    包含了一个flitetest 网站上的航模制作图纸。机翼的做法可以参考这些图纸。
   node_modules           包含了控制器用到的各种node.js库文件。考虑到大家翻墙的困难，这是很有必要的。
   pid                    包含了自动驾驶要用的PID算法，和PID自整定算法。基本都是我从Arduino的C语言代码移植到node.js代码，还没经过测试。工作的关系，使用过很多公司的PID自整定，三菱的，欧姆龙的，罗克韦尔的...然而没有一家能敌西门子的。6MHz的处理器，几十kb的内存，也许能敌你的超级计算机。国产的不提也罢，等它整定好，机器也该坏了，根本无所谓自整定。
   public                 这个目录是无人机的控制界面代码。
   SensorBot              这是一个Android手机的传感器机器人App项目，Java代码。App一旦运行就会自动通过WiFi连接到无人机，并向其发送传感器实时数据。
   app.js                 无人机服务器代码。起到接收机和控制器的作用。
   package-lock.json      node.js库配置文件。
   
3、硬件
   机翼和尾舵用泡沫板制作，机身用2只2.5升装可乐瓶制作。
   30A无刷电机电子调速器ESC  × 2
   9g舵机                    × 3
   5030三叶正反螺旋桨
   2212外转子无刷电机 1000kv × 2
   3S3P 8.4Ah锂离子电池组(3×3 1865电池组)
   Raspberry Pi Model 3B
   USB转TTL通讯模块
   DC12V转5V降压模块
   其他工具及相应配件
   
4、软件
   raspbian    node.js
   
5、运行
   项目部署到Raspberry Pi后关闭nginx或者Apache服务器，确保80端口没被占用。
   启动 $ node app.js       
   任意浏览器连接，例如：http://192.168.1.106  出现控制界面。界面右上角有一个摇摆的狗子，点击它可以查看具体操作说明。
	
6、关于我
   egotom@gmail.com